{"version":3,"sources":["components/explorer/Modal.js","components/explorer/Flights.js","components/explorer/SearchBar.js","components/explorer/Pagination.js","layouts/FlightList.js"],"names":["Modal","_ref","handleClose","open","flightId","navigate","useNavigate","react_default","a","createElement","Fragment","Dialog","keepMounted","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","id","DialogActions","Button","onClick","concat","Flights","flight","_useState","useState","_useState2","Object","slicedToArray","setOpen","_useState3","_useState4","setFlightId","handleClickToOpen","TableContainer","component","Paper","Table","sx","minWidth","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","item","key","_id","&:last-child td, &:last-child th","border","scope","name","airplane","from","toUpperCase","to","Date","departurDate","toLocaleDateString","departurTime","maxEconomy","maxBusiness","react_router_dom","className","explorer_Modal","handleOpen","SearchBar","handleSearch","type","placeholder","onChange","Pagination","totalFlight","flightPerPage","paginate","pageNumbers","i","Math","ceil","push","number","FlightList","dispatch","useDispatch","_useSelector","useSelector","state","flights","loading","error","inputSearch","setInputSearch","currentPage","setCurrentPage","_useState5","useEffect","console","log","fetchAll","data","indexOfLastFlight","indexOfFirstFlight","currentFlights","slice","explorer_SearchBar","e","preventDefault","target","value","explorer_Flights","filter","toLowerCase","includes","explorer_Pagination","length","pageNumber","react_router"],"mappings":"gQA0CeA,EAhCD,SAAAC,GAAiC,IAA/BC,EAA+BD,EAA/BC,YAAYC,EAAmBF,EAAnBE,KAAKC,EAAcH,EAAdG,SAEzBC,EAAWC,cAOjB,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIR,KAAMA,EACNS,aAAW,EACXC,QAASX,EACTY,mBAAiB,kCAEjBP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KAAc,qCACdR,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAmBC,GAAG,kCAAtB,gCAIFX,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAASnB,GAAjB,YACAK,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAAS,WAAOnB,IAnB9BG,EAAQ,WAAAiB,OAAYlB,MAmBd,aC+CKmB,EApEC,SAAAtB,GAAc,IAAZuB,EAAYvB,EAAZuB,OAAYC,EAELC,oBAAS,GAFJC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAErBtB,EAFqBwB,EAAA,GAEhBG,EAFgBH,EAAA,GAAAI,EAGGL,mBAAS,MAHZM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAGrB3B,EAHqB4B,EAAA,GAGZC,EAHYD,EAAA,GAQtBE,EAAoB,WACxBJ,GAAQ,IAQV,OACEvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAgBC,UAAWC,KACzB9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAOC,GAAI,CAAEC,SAAU,KAAOC,aAAW,gBACvClC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,KACEnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,YACArC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAAjB,WACAtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAAjB,QACAtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAAjB,MACAtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAAjB,QACAtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAAjB,QACAtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAAjB,WACAtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAAjB,YACAtC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAAjB,YAGJtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KAGEtB,EAAOuB,IAAI,SAAAC,GAAI,OACbzC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEM,IAAKD,EAAKE,IACVX,GAAI,CAAEY,mCAAoC,CAAEC,OAAQ,KAEpD7C,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWR,UAAU,KAAKiB,MAAM,OAC7BL,EAAKM,MAER/C,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAKO,UAC/BhD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAKQ,KAAKC,eACpClD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAKU,GAAGD,eAClClD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAAU,IAAIc,KAAMX,EAAKY,cAAcC,mBAAmB,UAC3EtD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAKc,cAC/BvD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAKe,YAC/BxD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAKgB,aAC/BzD,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAWC,MAAM,SACftC,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAASP,GAAE,KACTnD,EAAAC,EAAAC,cAAA,UAAQyD,UAAU,wBAAwB7C,QAAU,WAxC3C,IAACH,EAwCiDgB,IAxCjDhB,EAwCsF8B,EAAKE,IAvCnHjB,EAAYf,KAuCE,mBASdX,EAAAC,EAAAC,cAAC0D,EAAD,CAAOC,WAAYlC,EAAmBhC,YApDb,WACzB4B,GAAQ,IAmD+D3B,KAAMA,EAAMC,SAAUA,MChElFiE,EAXG,SAAApE,GAEZ,IADJqE,EACIrE,EADJqE,aAGA,OACE/D,EAAAC,EAAAC,cAAA,OAAKyD,UAAU,aACZ3D,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,OAAOC,YAAY,WAAWC,SAAUH,qBCgB5CI,EAtBI,SAAAzE,GAKjB,IAL2D,IAAxC0E,EAAwC1E,EAAxC0E,YAAYC,EAA4B3E,EAA5B2E,cAAcC,EAAc5E,EAAd4E,SACvCC,EAAc,GAIZC,EAAI,EAAGA,GAAKC,KAAKC,KAAKN,EAAYC,GAAgBG,IACxDD,EAAYI,KAAKH,GAGnB,OACExE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIyD,UAAU,cACTY,EAAY/B,IAAI,SAAAoC,GAAM,OACnB5E,EAAAC,EAAAC,cAAA,MAAIwC,IAAKkC,EAAQjB,UAAU,aAC3B3D,EAAAC,EAAAC,cAAA,UAAQyD,UAAU,YAAY7C,QAAS,kBAAMwD,EAASM,KAAWA,SCiDlEC,UA1DI,WACjB,IAAMC,EAAWC,cADMC,EAESC,YAAY,SAAAC,GAAK,OAAIA,EAAMjE,SAApDkE,EAFgBH,EAEhBG,QAAQC,EAFQJ,EAERI,QAAQC,EAFAL,EAEAK,MAFAnE,EAGeC,mBAAS,IAHxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGhBoE,EAHgBlE,EAAA,GAGHmE,EAHGnE,EAAA,GAAAI,EAIcL,mBAAS,GAJvBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAIhBgE,EAJgB/D,EAAA,GAIJgE,EAJIhE,EAAA,GAAAiE,EAKCvE,mBAAS,GAA1BkD,EALgBhD,OAAAC,EAAA,EAAAD,CAAAqE,EAAA,MAWvBC,oBAAU,WACLN,GACDO,QAAQC,IAAIR,GAEdP,EAASgB,gBACT,CAAChB,IAEF,IASeiB,EATTC,EAAoBR,EAAcnB,EAClC4B,EAAqBD,EAAoB3B,EACzC6B,EAAiBf,EAAQgB,MAAMF,EAAoBD,GAwB1D,OAAGZ,EACMpF,EAAAC,EAAAC,cAAA,yBAGPF,EAAAC,EAAAC,cAAA,WAASyD,UAAU,uBACjB3D,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACkG,EAAD,CAAYrC,aAbK,SAACsC,GACpBA,EAAEC,iBACFf,EAAec,EAAEE,OAAOC,UAYtBxG,EAAAC,EAAAC,cAACuG,EAAD,CAASxF,QAxBG8E,EAwBYG,EAvBnBH,EAAKW,OAAO,SAACzF,GAAD,OAAYA,EAAO8B,KAAK4D,cAAcC,SAAStB,IAC/DrE,EAAO+B,SAAS2D,cAAcC,SAAStB,IACvCrE,EAAOgC,KAAK0D,cAAcC,SAAStB,IACnCrE,EAAOkC,GAAGwD,cAAcC,SAAStB,QAqBlCtF,EAAAC,EAAAC,cAAC2G,EAAD,CAAYzC,YAAae,EAAQ2B,OAAQzC,cAAeA,EAAeC,SAV1D,SAACyC,GAAD,OAAgBtB,EAAesB,MAW5C/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD","file":"static/js/5.ae7f9f08.chunk.js","sourcesContent":["import React from 'react'\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Modal = ({handleClose,open,flightId}) => {\r\n  \r\n  const navigate = useNavigate()\r\n  const handleAgree = () => {\r\n    // fetch single flight by id and redirect to flight detail page\r\n    //dispatch(fetchFlightId(flightId))\r\n    navigate(`/flight/${flightId}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Dialog\r\n        open={open}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{\"Do you want to book this flight ?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Please confirme the flight. \r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Disagree</Button>\r\n          <Button onClick={() => {handleClose(); handleAgree(); }}>Agree</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modal","import React, { useState } from 'react'\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\n\nimport { NavLink } from 'react-router-dom';\nimport Modal from './Modal'\n\n\nconst Flights = ({flight}) => {\n\n  const [open,setOpen] = useState(false)\n  const [flightId,setFlightId] = useState(null)\n\n  /**\n   *  @Description : open/close the modal  \n  **/\n  const handleClickToOpen = () => {\n    setOpen(true);\n  }\n  const handleClickToClose = () => {\n    setOpen(false)\n  }\n  const handleFlightById = (id) => {\n    setFlightId(id)\n  }\n  return (\n    <>\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Ref</TableCell>\n            <TableCell align=\"right\">Airline</TableCell>\n            <TableCell align=\"right\">From</TableCell>\n            <TableCell align=\"right\">to</TableCell>\n            <TableCell align=\"right\">Date</TableCell>\n            <TableCell align=\"right\">Time</TableCell>\n            <TableCell align=\"right\">Economy</TableCell>\n            <TableCell align=\"right\">Business</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n         {\n          \n          flight.map(item => (\n            <TableRow\n              key={item._id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {item.name}\n              </TableCell>\n              <TableCell align=\"right\">{item.airplane}</TableCell>\n              <TableCell align=\"right\">{item.from.toUpperCase()}</TableCell>\n              <TableCell align=\"right\">{item.to.toUpperCase()}</TableCell>\n              <TableCell align=\"right\">{ new Date( item.departurDate).toLocaleDateString('fr-FR')}</TableCell>\n              <TableCell align=\"right\">{item.departurTime}</TableCell>\n              <TableCell align=\"right\">{item.maxEconomy}</TableCell>\n              <TableCell align=\"right\">{item.maxBusiness}</TableCell>\n              <TableCell align=\"right\">\n                <NavLink to={`/`}>\n                  <button className='btn btn-block booking' onClick={ () => {handleClickToOpen();handleFlightById(item._id);} }>Booking</button>\n                </NavLink>\n              </TableCell>\n\n            </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    <Modal handleOpen={handleClickToOpen} handleClose={handleClickToClose} open={open} flightId={flightId}/>   \n    </>\n  )\n}\n\nexport default Flights","import React from 'react'\n\nconst SearchBar = ({\n  handleSearch,\n}) => {\n\n  return (\n    <div className='searchbar'>\n       <input type=\"text\" placeholder=\"Search..\" onChange={handleSearch}></input>\n     </div>\n  )\n}\n\nexport default SearchBar","import React from 'react'\n\nconst Pagination = ({totalFlight,flightPerPage,paginate}) => {\n  const pageNumbers = [];\n  /**\n   * @description: calculate the number of pages based on the total number of flights and the number of flights per page\n   */\n  for(let i = 1; i <= Math.ceil(totalFlight/flightPerPage); i++){\n    pageNumbers.push(i)\n  }\n\n  return (\n    <nav>\n        <ul className='pagination'>\n            {pageNumbers.map(number =>\n                <li key={number} className='page-item'>\n                <button className='page-link' onClick={() => paginate(number)} >{number}</button>\n                </li>\n            )}\n        </ul>\n    </nav>\n  )\n}\n\nexport default Pagination","import React,{useEffect,useState}from 'react'\nimport Flights from '../components/explorer/Flights'\nimport SearchBar from '../components/explorer/SearchBar'\nimport {useDispatch,useSelector} from 'react-redux'\nimport {fetchAll} from '../features/flight/flightSlice'\nimport Pagination from '../components/explorer/Pagination'\nimport { Outlet } from 'react-router-dom'\nconst FlightList = () => {\n  const dispatch = useDispatch()\n  const {flights,loading,error} = useSelector(state => state.flight)\n  const [inputSearch, setInputSearch] = useState(\"\");\n  const [currentPage,setCurrentPage] = useState(1)\n  const [flightPerPage] = useState(5)\n\n  /**\n   * @description: useEffect to fetch all flights\n   * \n   */\n  useEffect(() => {\n    if(error){\n      console.log(error)\n    }\n    dispatch(fetchAll())  \n  },[dispatch]) \n  \n   const indexOfLastFlight = currentPage * flightPerPage;\n   const indexOfFirstFlight = indexOfLastFlight - flightPerPage;\n   const currentFlights = flights.slice(indexOfFirstFlight, indexOfLastFlight);\n\n\n  /** \n   * @Description: Search flights by airline name,from and to destination\n   * @param {string} inputSearch\n   */\n  const search = (data) => {\n    return data.filter((flight) => flight.name.toLowerCase().includes(inputSearch)\n    || flight.airplane.toLowerCase().includes(inputSearch)\n    || flight.from.toLowerCase().includes(inputSearch)\n    || flight.to.toLowerCase().includes(inputSearch))\n  }\n  /**\n   * @Description: set value of inputSearch \n   *  \n   */\n  const handleSearch = (e) => {\n    e.preventDefault()\n    setInputSearch(e.target.value)\n  }\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n \n  if(loading){\n    return <div>Loading...</div>\n  }\n  return (\n    <section className='dashboard-container'>\n      <h1>All Flights</h1>\n      <SearchBar  handleSearch={handleSearch}/>\n      <Flights flight={search(currentFlights)}/>\n      <Pagination totalFlight={flights.length} flightPerPage={flightPerPage} paginate={paginate}/>\n      <Outlet/>\n    </section>\n  )\n}\n\nexport default FlightList"],"sourceRoot":""}